services:
  elasticsearch:
    # Elasticsearch service for storing and querying data
    container_name: es-container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.2
    environment:
      - xpack.security.enabled=false  # Disables security features (no authentication required)
      - "discovery.type=single-node"  # Runs Elasticsearch as a single-node cluster
    networks:
      - es-net  # Connects Elasticsearch to the custom network
    ports:
      - 9200:9200  # Exposes Elasticsearch on port 9200
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]  # Checks if Elasticsearch is running
      interval: 10s  # Runs the health check every 10 seconds
      retries: 5  # Retries up to 5 times before marking it as unhealthy
      start_period: 20s  # Waits 20 seconds before starting the health check

  kibana:
    # Kibana service for visualizing Elasticsearch data
    container_name: kb-container
    image: docker.elastic.co/kibana/kibana:8.1.2
    environment:
      - ELASTICSEARCH_HOSTS=http://es-container:9200  # Connects Kibana to Elasticsearch
    networks:
      - es-net  # Connects Kibana to the custom network
    depends_on:
      elasticsearch:
        condition: service_healthy  # Ensures Elasticsearch is ready before starting Kibana
    ports:
      - 5601:5601  # Exposes Kibana on port 5601
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]  # Checks if Kibana is running
      interval: 10s
      retries: 5
      start_period: 30s  # Waits 30 seconds before starting the health check

  historical:
    # Python-based historical data processing service
    build: ./historical  # Builds the historical service from the specified directory
    container_name: python-app
    depends_on:
      elasticsearch:
        condition: service_healthy  # Ensures Elasticsearch is ready before starting
      kibana:
        condition: service_healthy  # Ensures Kibana is ready before starting
    networks:
      - es-net  # Connects the historical service to the custom network
    volumes:
      - ./models:/historical/data  # Mounts the models directory into the container for data storage

# Define a custom bridge network for communication between services
networks:
  es-net:
    driver: bridge